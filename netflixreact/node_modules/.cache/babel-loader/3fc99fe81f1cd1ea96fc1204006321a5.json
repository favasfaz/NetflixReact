{"ast":null,"code":"var _jsxFileName = \"/home/favaz/netflixreact/netflixreact/src/Components/RowPost/RowPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from '../../axios';\nimport { API_KEY, BASE_URL, IMAGE_URL } from '../../Constants/Constants';\nimport './RowPost.css';\nimport YouTube from 'react-youtube';\nimport SinglePost from './SinglePost';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RowPost(props) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [urls, setUrls] = useState('');\n  useEffect(() => {\n    axios.get(props.url).then(response => {\n      setMovies(response.data.results);\n    });\n  }, []);\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1\n    }\n  };\n\n  const forTrailer = id => {\n    /*#__PURE__*/\n    _jsxDEV(SinglePost, {\n      id: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this); // console.log(id,'idhere');\n    //   axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`)\n    //   .then((response)=>{\n    //     if(response.data.results.length!=0){\n    //       setUrls(response.data.results[0])\n    //     }\n    //     else{\n    //       console.log(response.data.results.length,'lno');\n    //     }\n    //   })\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: movies.map((movie, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => {\n          forTrailer(movie.id);\n        },\n        className: props.isSmall ? 'smallPoster' : 'poster',\n        src: `${IMAGE_URL + movie.backdrop_path}`,\n        alt: \"\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), urls && /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: urls.key,\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RowPost, \"eptSMll9Hplzg0FB6Qw23xpdUIM=\");\n\n_c = RowPost;\nexport default RowPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"RowPost\");","map":{"version":3,"names":["React","useState","useEffect","axios","API_KEY","BASE_URL","IMAGE_URL","YouTube","SinglePost","RowPost","props","movies","setMovies","urls","setUrls","get","url","then","response","data","results","opts","height","width","playerVars","autoplay","forTrailer","id","title","map","movie","i","isSmall","backdrop_path","key"],"sources":["/home/favaz/netflixreact/netflixreact/src/Components/RowPost/RowPost.js"],"sourcesContent":["import React,{useState,useEffect} from 'react'\nimport axios from '../../axios'\nimport {API_KEY,BASE_URL,IMAGE_URL} from '../../Constants/Constants'\nimport './RowPost.css'\nimport YouTube from 'react-youtube';\nimport SinglePost from './SinglePost'\n\nfunction RowPost(props) {\n\n  const [movies,setMovies] = useState([])\n  const [urls,setUrls] = useState('')\n\n\n  useEffect(()=>{\n    axios.get(props.url)\n    .then((response)=>{\n      setMovies(response.data.results)\n    })\n  },[])\n\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1,\n    },\n  };\n\n  const forTrailer =(id)=>{\n      <SinglePost id/>\n    // console.log(id,'idhere');\n    //   axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`)\n    //   .then((response)=>{\n        \n    //     if(response.data.results.length!=0){\n    //       setUrls(response.data.results[0])\n    //     }\n    //     else{\n    //       console.log(response.data.results.length,'lno');\n    //     }\n    //   })\n  }\n\n  return (\n    <div className='row'>\n        <h2>{props.title}</h2>\n        <div className='posters'>\n       {\n        movies.map((movie,i)=>\n          <img key={i} onClick={()=>{forTrailer(movie.id)}}  className={props.isSmall?'smallPoster':'poster'} src={`${IMAGE_URL+movie.backdrop_path}`} alt=\"\" />\n        )\n       }\n        </div>\n      { urls  && <YouTube videoId={urls.key} opts={opts}/>  }  \n    </div>\n  )\n}\n\nexport default RowPost"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,OAAR,EAAgBC,QAAhB,EAAyBC,SAAzB,QAAyC,2BAAzC;AACA,OAAO,eAAP;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EAAA;;EAEtB,MAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBX,QAAQ,CAAC,EAAD,CAAnC;EACA,MAAM,CAACY,IAAD,EAAMC,OAAN,IAAiBb,QAAQ,CAAC,EAAD,CAA/B;EAGAC,SAAS,CAAC,MAAI;IACZC,KAAK,CAACY,GAAN,CAAUL,KAAK,CAACM,GAAhB,EACCC,IADD,CACOC,QAAD,IAAY;MAChBN,SAAS,CAACM,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAT;IACD,CAHD;EAID,CALQ,EAKP,EALO,CAAT;EAOA,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAE,KADG;IAEXC,KAAK,EAAE,MAFI;IAGXC,UAAU,EAAE;MACV;MACAC,QAAQ,EAAE;IAFA;EAHD,CAAb;;EASA,MAAMC,UAAU,GAAGC,EAAD,IAAM;IACpB;IAAA,QAAC,UAAD;MAAY,EAAE;IAAd;MAAA;MAAA;MAAA;IAAA,SADoB,CAEtB;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;EACD,CAbD;;EAeA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACI;MAAA,UAAKjB,KAAK,CAACkB;IAAX;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,SAAf;MAAA,UAEAjB,MAAM,CAACkB,GAAP,CAAW,CAACC,KAAD,EAAOC,CAAP,kBACT;QAAa,OAAO,EAAE,MAAI;UAACL,UAAU,CAACI,KAAK,CAACH,EAAP,CAAV;QAAqB,CAAhD;QAAmD,SAAS,EAAEjB,KAAK,CAACsB,OAAN,GAAc,aAAd,GAA4B,QAA1F;QAAoG,GAAG,EAAG,GAAE1B,SAAS,GAACwB,KAAK,CAACG,aAAc,EAA1I;QAA6I,GAAG,EAAC;MAAjJ,GAAUF,CAAV;QAAA;QAAA;QAAA;MAAA,QADF;IAFA;MAAA;MAAA;MAAA;IAAA,QAFJ,EASIlB,IAAI,iBAAK,QAAC,OAAD;MAAS,OAAO,EAAEA,IAAI,CAACqB,GAAvB;MAA4B,IAAI,EAAEb;IAAlC;MAAA;MAAA;MAAA;IAAA,QATb;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;;GAlDQZ,O;;KAAAA,O;AAoDT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}