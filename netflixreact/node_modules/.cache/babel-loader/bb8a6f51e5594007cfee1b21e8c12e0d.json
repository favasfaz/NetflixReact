{"ast":null,"code":"var _jsxFileName = \"/home/favaz/netflixreact/netflixreact/src/Components/RowPost/RowPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from '../../axios';\nimport { API_KEY, BASE_URL, IMAGE_URL } from '../../Constants/Constants';\nimport './RowPost.css';\nimport YouTube from 'react-youtube';\nimport SinglePost from './SinglePost';\nimport { useNavigate } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RowPost(props) {\n  _s();\n\n  const navigate = useNavigate();\n  const [movies, setMovies] = useState([]);\n  const [urls, setUrls] = useState('');\n  useEffect(() => {\n    axios.get(props.url).then(response => {\n      setMovies(response.data.results);\n    });\n  }, []);\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1\n    }\n  };\n\n  const forTrailer = id => {\n    // navigate('/login',{state:{movieId:id}})\n    console.log(id, 'idhere');\n    axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(response => {\n      if (response.data.results.length != 0) {\n        setUrls(response.data.results[0]);\n      } else {\n        swal(\"!\", \"NO video found\", \"error\");\n      }\n    }).catch(err => {\n      swal(\"!\", \"Something went wrong\", \"error\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: movies.map((movie, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => {\n          forTrailer(movie.id);\n        },\n        className: props.isSmall ? 'smallPoster' : 'poster',\n        src: `${IMAGE_URL + movie.backdrop_path}`,\n        alt: \"\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), urls && /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: urls.key,\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RowPost, \"pY0xvvk/dYY7zQRMYdZiXHHSbXg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = RowPost;\nexport default RowPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"RowPost\");","map":{"version":3,"names":["React","useState","useEffect","axios","API_KEY","BASE_URL","IMAGE_URL","YouTube","SinglePost","useNavigate","swal","RowPost","props","navigate","movies","setMovies","urls","setUrls","get","url","then","response","data","results","opts","height","width","playerVars","autoplay","forTrailer","id","console","log","length","catch","err","title","map","movie","i","isSmall","backdrop_path","key"],"sources":["/home/favaz/netflixreact/netflixreact/src/Components/RowPost/RowPost.js"],"sourcesContent":["import React,{useState,useEffect} from 'react'\nimport axios from '../../axios'\nimport {API_KEY,BASE_URL,IMAGE_URL} from '../../Constants/Constants'\nimport './RowPost.css'\nimport YouTube from 'react-youtube';\nimport SinglePost from './SinglePost'\nimport {useNavigate} from 'react-router-dom'\nimport swal from 'sweetalert'\nfunction RowPost(props) {\n\n  const navigate = useNavigate()\n  const [movies,setMovies] = useState([])\n  const [urls,setUrls] = useState('')\n\n\n  useEffect(()=>{\n    axios.get(props.url)\n    .then((response)=>{\n      setMovies(response.data.results)\n    })\n  },[])\n\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1,\n    },\n  };\n\n  const forTrailer =(id)=>{\n      // navigate('/login',{state:{movieId:id}})\n    console.log(id,'idhere');\n      axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`)\n      .then((response)=>{\n        \n        if(response.data.results.length!=0){\n          setUrls(response.data.results[0])\n        }\n        else{\n          swal(\"!\", \"NO video found\", \"error\");  \n              }\n      })\n      .catch((err)=>{\n        swal(\"!\", \"Something went wrong\", \"error\");  \n\n      })\n  }\n\n  return (\n    <div className='row'>\n        <h2>{props.title}</h2>\n        <div className='posters'>\n       {\n        movies.map((movie,i)=>\n          <img key={i} onClick={()=>{forTrailer(movie.id)}}  className={props.isSmall?'smallPoster':'poster'} src={`${IMAGE_URL+movie.backdrop_path}`} alt=\"\" />\n        )\n       }\n        </div>\n      { urls  && <YouTube videoId={urls.key} opts={opts}/>  }  \n    </div>\n  )\n}\n\nexport default RowPost"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,OAAR,EAAgBC,QAAhB,EAAyBC,SAAzB,QAAyC,2BAAzC;AACA,OAAO,eAAP;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EAAA;;EAEtB,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;EACA,MAAM,CAACK,MAAD,EAAQC,SAAR,IAAqBd,QAAQ,CAAC,EAAD,CAAnC;EACA,MAAM,CAACe,IAAD,EAAMC,OAAN,IAAiBhB,QAAQ,CAAC,EAAD,CAA/B;EAGAC,SAAS,CAAC,MAAI;IACZC,KAAK,CAACe,GAAN,CAAUN,KAAK,CAACO,GAAhB,EACCC,IADD,CACOC,QAAD,IAAY;MAChBN,SAAS,CAACM,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAT;IACD,CAHD;EAID,CALQ,EAKP,EALO,CAAT;EAOA,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAE,KADG;IAEXC,KAAK,EAAE,MAFI;IAGXC,UAAU,EAAE;MACV;MACAC,QAAQ,EAAE;IAFA;EAHD,CAAb;;EASA,MAAMC,UAAU,GAAGC,EAAD,IAAM;IACpB;IACFC,OAAO,CAACC,GAAR,CAAYF,EAAZ,EAAe,QAAf;IACE3B,KAAK,CAACe,GAAN,CAAW,UAASY,EAAG,mBAAkB1B,OAAQ,iBAAjD,EACCgB,IADD,CACOC,QAAD,IAAY;MAEhB,IAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsBU,MAAtB,IAA8B,CAAjC,EAAmC;QACjChB,OAAO,CAACI,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsB,CAAtB,CAAD,CAAP;MACD,CAFD,MAGI;QACFb,IAAI,CAAC,GAAD,EAAM,gBAAN,EAAwB,OAAxB,CAAJ;MACK;IACR,CATD,EAUCwB,KAVD,CAUQC,GAAD,IAAO;MACZzB,IAAI,CAAC,GAAD,EAAM,sBAAN,EAA8B,OAA9B,CAAJ;IAED,CAbD;EAcH,CAjBD;;EAmBA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACI;MAAA,UAAKE,KAAK,CAACwB;IAAX;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,SAAf;MAAA,UAEAtB,MAAM,CAACuB,GAAP,CAAW,CAACC,KAAD,EAAOC,CAAP,kBACT;QAAa,OAAO,EAAE,MAAI;UAACV,UAAU,CAACS,KAAK,CAACR,EAAP,CAAV;QAAqB,CAAhD;QAAmD,SAAS,EAAElB,KAAK,CAAC4B,OAAN,GAAc,aAAd,GAA4B,QAA1F;QAAoG,GAAG,EAAG,GAAElC,SAAS,GAACgC,KAAK,CAACG,aAAc,EAA1I;QAA6I,GAAG,EAAC;MAAjJ,GAAUF,CAAV;QAAA;QAAA;QAAA;MAAA,QADF;IAFA;MAAA;MAAA;MAAA;IAAA,QAFJ,EASIvB,IAAI,iBAAK,QAAC,OAAD;MAAS,OAAO,EAAEA,IAAI,CAAC0B,GAAvB;MAA4B,IAAI,EAAElB;IAAlC;MAAA;MAAA;MAAA;IAAA,QATb;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;;GAvDQb,O;UAEUF,W;;;KAFVE,O;AAyDT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}